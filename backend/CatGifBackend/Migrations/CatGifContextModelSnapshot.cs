// <auto-generated />
using System;
using CatGifBackend.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CatGifBackend.Migrations
{
    [DbContext(typeof(CatGifContext))]
    partial class CatGifContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CatGifBackend.Context.Historial_catgif", b =>
                {
                    b.Property<int>("id_cat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cat");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id_cat"));

                    b.Property<string>("Fact")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fact");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("fecha");

                    b.Property<string>("gif_url")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("gif_url");

                    b.Property<string>("query_text")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("query_text");

                    b.HasKey("id_cat");

                    b.ToTable("historial_catgif", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
